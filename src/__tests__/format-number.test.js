import formatNumber from '../format-number';


function testFormat([format, input, expectedFormattedInput]) {
  test(`formatNumber("${format}", "${input}") => "${expectedFormattedInput}"`, () => {
    expect(formatNumber(format, input)).toEqual(expectedFormattedInput);
  });
}

describe('"(###) ###-####"', () => {
  [
    ['(###) ###-####', '', ''],
    ['(###) ###-####', '1', '(1'],
    ['(###) ###-####', '12', '(12'],
    ['(###) ###-####', '123', '(123'],
    ['(###) ###-####', '1234', '(123) 4'],
    ['(###) ###-####', '12345', '(123) 45'],
    ['(###) ###-####', '123456', '(123) 456'],
    ['(###) ###-####', '1234567', '(123) 456-7'],
    ['(###) ###-####', '12345678', '(123) 456-78'],
    ['(###) ###-####', '1234567890', '(123) 456-7890'],
  ].forEach(testFormat);
});

describe('"### ### ####"', () => {
  [
    ['### ### ####', '1', '1'],
    ['### ### ####', '12', '12'],
    ['### ### ####', '123', '123'],
    ['### ### ####', '1234', '123 4'],
    ['### ### ####', '123456', '123 456'],
    ['### ### ####', '1234567', '123 456 7'],
    ['### ### ####', '1234567890', '123 456 7890'],
  ].forEach(testFormat);
});

describe('"(##) #### ####"', () => {
  [
    ['(##) #### ####', '1', '(1'],
    ['(##) #### ####', '12', '(12'],
    ['(##) #### ####', '123', '(12) 3'],
    ['(##) #### ####', '12345', '(12) 345'],
    ['(##) #### ####', '123456', '(12) 3456'],
    ['(##) #### ####', '1234567', '(12) 3456 7'],
    ['(##) #### ####', '123456789', '(12) 3456 789'],
    ['(##) #### ####', '1234567890', '(12) 3456 7890'],
  ].forEach(testFormat);
});

describe('"#-###-###-####"', () => {
  [
    ['#-###-###-####', '1', '1-'],
    ['#-###-###-####', '123', '1-23'],
    ['#-###-###-####', '1234', '1-234'],
    ['#-###-###-####', '12345', '1-234-5'],
    ['#-###-###-####', '123456', '1-234-56'],
    ['#-###-###-####', '1234567', '1-234-567'],
    ['#-###-###-####', '12345678', '1-234-567-8'],
    ['#-###-###-####', '12345678901', '1-234-567-8901'],
  ].forEach(testFormat);
});

describe('(VISA/MC) "#### #### #### ####"', () => {
  [
    ['#### #### #### ####', '4', '4'],
    ['#### #### #### ####', '412', '412'],
    ['#### #### #### ####', '4123', '4123'],
    ['#### #### #### ####', '41235', '4123 5'],
    ['#### #### #### ####', '4123567', '4123 567'],
    ['#### #### #### ####', '41235678', '4123 5678'],
    ['#### #### #### ####', '412356789', '4123 5678 9'],
    ['#### #### #### ####', '412356789012', '4123 5678 9012'],
    ['#### #### #### ####', '4123567890123', '4123 5678 9012 3'],
    ['#### #### #### ####', '4123567890123456', '4123 5678 9012 3456'],
  ].forEach(testFormat);
});

describe('(AMEX) "#### ###### #####"', () => {
  [
    ['#### ###### #####', '123', '123'],
    ['#### ###### #####', '1234', '1234'],
    ['#### ###### #####', '123456789', '1234 56789'],
    ['#### ###### #####', '1234567890', '1234 567890'],
    ['#### ###### #####', '12345678901', '1234 567890 1'],
    ['#### ###### #####', '1234567890123', '1234 567890 123'],
    ['#### ###### #####', '123456789012345', '1234 567890 12345'],
  ].forEach(testFormat);
});
